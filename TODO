- [/] Loader
	- [/] Cargar programas a simular en el simulador
		- [/] Pillar pcb
		- [/] Tabla de paginas que se guarda en pgb
		- [/] Cargar ejecutable, copiar en memoria los segmentos de datos y codigo, acualizar tabla de paginas.
	- [/] Reemplazar Pgenerator, el tick de pgenerator ahora debe hacer tickear al loader y cambiar parametros. Ahora esos parametros afectan al loader y no PGenerator.
		- [/] Prioridades
		- [/] Afinidad

- [/] Machine
	- [/] MMU
		- [/] TLB
		- [/] Limitar accesos a ciertas direcciones, mirando si la página que se quiere acceder esta fuera de rango con code_start y end
			- [-] Forzar terminación (estado TERM) (no porque no va a haber código que haga esto)
	- [/] PTBR	<- inicializarla en memoria y darle valor al registro pt br
		- [/] Hacerlo con un malloc
		- [-] Instanciarla reservando memoria (lo del kernel) (ademas guarda los datos de otros campos, extra)
		- [/] Mecanismos para reservar y quitar direcciones
			- [-] Se asignan las direcciones logicas en orden en el que esten libres 
				y la tabla fisica es la que se haya asignado en memoria
	- [/] Registros RI PC y 16 registros generales
	- [/] Juego de instrucciones
		- [/] ld, st, add, exit
			- [/] Implementacion de exit
			- [/] Fetch 
			- [/] Decodificar ld, st, add, exit
			- [/] Busqueda de operandos (carga y guardado) st, add y ld
			- [/] Operar (exit saca del procesador)
			- [/] Escribir resultados ld y add en registros y st en memoria
	- [/] Cambio de contexto

- [/] Memoria fisica
	- [/] Bus de direcciones 24 bits, tamaño palabra (4 bytes)
	- [/] Pagina de 256 bytes
	- [/] Espacio reservado de memoria 0x000000 0x3FFFFF
		- [/] Politica de meter (mirar tema 3)
		- [-] Al traducir direcciones o lo que sea que pase, que compruebe esta direccion y si esta en su rango que saque una excepcion
	- [/] Cargar programas en memoria
		- [-] Generar las tablas de las paginas y que estas se almacenen en memoria haciendo el malloc a mano
	- [/] Descargar programas de memoria
	
- [/] PCB
	- [/] Estructura mm
	- [/] status por cambio de contexto
		- [/] que limpie la tlb al hacer cambio de contexto
	- [/] Al generarlo poner esos estados al valor por defecto



- [/] Funcionalidad del simulador
	- [/] Page fault
	- [/] Bloqueos aleatorios al no encontrar la tabla en la TLB o de forma aleatoria al hacer un load
	- [/] Terminar programa con exit
	- [/] Sacar programas de memoria al Terminar
	- [/] Comprobar los cambios de contexto
	- [/] Al intentar cargar el programa tener en cuenta los errores
	
ORDEN: Memoria, Maquina con componentes, tablas, loader



// Preguntar:
	-Memoria virtual y fisica, como se enlazan, si todos quieren la memoria virtual 0
	como enlazo direccion virtual a pagina, como se llama lo que hace eso, esto crea un problema y hay que eliminarlo	
		las variables ya estan en los datos
	-PGB de pcb, ¿qué es?
		es el puntero de la tabla de paginas del propio programa, cada programa tiene su tabla
	-¿Como sabes cuantas paginas ocupa un programa a la hora de quitarlo de memoria?
		esta en la tabla de paginas del propio pcb


- [/] Generar tablas para los programas cargados en memoria
- [/] Asignar esa tabla al pgb, luego esa señal al procesador cuando carga
	- [/] Hacerlo con malloc porque si no es mucho lio
	- [/] Eliminar las otras entradas del TLB al cambiar de contexto para evitar problemas con otros procesos
- [/] TLB y MMU
	- [/] Politica de reemplazo FIFO
	- [/] Mejorar forma de eliminar (bit de validez) 
- [/] Liberar memoria con free



- [ ] Memoria/Informe tecnico
	- [ ] Physical: como se genera, politica, como se buscan los datos, estructuras de datos utilizadas
	- [ ] Loader: requisitos para cargar programa(espacio en schedmaestro y que existan pcbs), luego posibles valores devueltos (falta de memoria y cosas asi) para indicar que no se ha completado la carga
	- [ ] Sistema de paginado, como se ha implementado
	- [ ] Explicar como se han generado las tablas
	- [ ] Como se ha implementado la MMU, politica de reemplazo estructuras
	- [ ] Estructura de mm_t
	- [ ] Poner heracles y prometeo en el annexo
Mejoras posibles:
Productor Consumidor en las colas de scheduler maestro a esclavos y de pgenerator a scheduler principal
//- [ ] Analisis de estadisicas
